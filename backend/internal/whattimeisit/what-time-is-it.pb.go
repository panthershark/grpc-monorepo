// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: what-time-is-it.proto

package whattimeisit

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WhatTimeIsItRightNowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WhatTimeIsItRightNowRequest) Reset() {
	*x = WhatTimeIsItRightNowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_what_time_is_it_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhatTimeIsItRightNowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhatTimeIsItRightNowRequest) ProtoMessage() {}

func (x *WhatTimeIsItRightNowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_what_time_is_it_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhatTimeIsItRightNowRequest.ProtoReflect.Descriptor instead.
func (*WhatTimeIsItRightNowRequest) Descriptor() ([]byte, []int) {
	return file_what_time_is_it_proto_rawDescGZIP(), []int{0}
}

type WhatTimeIsItRightNowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Now *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=now,proto3" json:"now,omitempty"`
}

func (x *WhatTimeIsItRightNowResponse) Reset() {
	*x = WhatTimeIsItRightNowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_what_time_is_it_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhatTimeIsItRightNowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhatTimeIsItRightNowResponse) ProtoMessage() {}

func (x *WhatTimeIsItRightNowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_what_time_is_it_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhatTimeIsItRightNowResponse.ProtoReflect.Descriptor instead.
func (*WhatTimeIsItRightNowResponse) Descriptor() ([]byte, []int) {
	return file_what_time_is_it_proto_rawDescGZIP(), []int{1}
}

func (x *WhatTimeIsItRightNowResponse) GetNow() *timestamppb.Timestamp {
	if x != nil {
		return x.Now
	}
	return nil
}

type WhatTimeIsItRightNowStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreqMs int32 `protobuf:"varint,1,opt,name=freq_ms,json=freqMs,proto3" json:"freq_ms,omitempty"`
}

func (x *WhatTimeIsItRightNowStreamRequest) Reset() {
	*x = WhatTimeIsItRightNowStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_what_time_is_it_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhatTimeIsItRightNowStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhatTimeIsItRightNowStreamRequest) ProtoMessage() {}

func (x *WhatTimeIsItRightNowStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_what_time_is_it_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhatTimeIsItRightNowStreamRequest.ProtoReflect.Descriptor instead.
func (*WhatTimeIsItRightNowStreamRequest) Descriptor() ([]byte, []int) {
	return file_what_time_is_it_proto_rawDescGZIP(), []int{2}
}

func (x *WhatTimeIsItRightNowStreamRequest) GetFreqMs() int32 {
	if x != nil {
		return x.FreqMs
	}
	return 0
}

type WhatTimeIsItRightNowStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Now *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=now,proto3" json:"now,omitempty"`
}

func (x *WhatTimeIsItRightNowStreamResponse) Reset() {
	*x = WhatTimeIsItRightNowStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_what_time_is_it_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhatTimeIsItRightNowStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhatTimeIsItRightNowStreamResponse) ProtoMessage() {}

func (x *WhatTimeIsItRightNowStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_what_time_is_it_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhatTimeIsItRightNowStreamResponse.ProtoReflect.Descriptor instead.
func (*WhatTimeIsItRightNowStreamResponse) Descriptor() ([]byte, []int) {
	return file_what_time_is_it_proto_rawDescGZIP(), []int{3}
}

func (x *WhatTimeIsItRightNowStreamResponse) GetNow() *timestamppb.Timestamp {
	if x != nil {
		return x.Now
	}
	return nil
}

var File_what_time_is_it_proto protoreflect.FileDescriptor

var file_what_time_is_it_proto_rawDesc = []byte{
	0x0a, 0x15, 0x77, 0x68, 0x61, 0x74, 0x2d, 0x74, 0x69, 0x6d, 0x65, 0x2d, 0x69, 0x73, 0x2d, 0x69,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x77, 0x68, 0x61, 0x74, 0x74, 0x69, 0x6d,
	0x65, 0x69, 0x73, 0x69, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1d, 0x0a, 0x1b, 0x57, 0x68, 0x61, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x49, 0x73, 0x49, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4c, 0x0a, 0x1c, 0x57, 0x68, 0x61, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x49, 0x73, 0x49, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x6f, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x03, 0x6e, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03,
	0x6e, 0x6f, 0x77, 0x22, 0x3c, 0x0a, 0x21, 0x57, 0x68, 0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x49,
	0x73, 0x49, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x6f, 0x77, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x65, 0x71,
	0x5f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x72, 0x65, 0x71, 0x4d,
	0x73, 0x22, 0x52, 0x0a, 0x22, 0x57, 0x68, 0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x73, 0x49,
	0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x6f, 0x77, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x03, 0x6e, 0x6f, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x03, 0x6e, 0x6f, 0x77, 0x32, 0x8c, 0x02, 0x0a, 0x13, 0x57, 0x68, 0x61, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x49, 0x73, 0x49, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6f, 0x0a,
	0x14, 0x57, 0x68, 0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x73, 0x49, 0x74, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x4e, 0x6f, 0x77, 0x12, 0x29, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x74, 0x69, 0x6d, 0x65,
	0x69, 0x73, 0x69, 0x74, 0x2e, 0x57, 0x68, 0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x73, 0x49,
	0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x69, 0x73, 0x69, 0x74, 0x2e,
	0x57, 0x68, 0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x73, 0x49, 0x74, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x4e, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x83,
	0x01, 0x0a, 0x1a, 0x57, 0x68, 0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x73, 0x49, 0x74, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x4e, 0x6f, 0x77, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2f, 0x2e,
	0x77, 0x68, 0x61, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x69, 0x73, 0x69, 0x74, 0x2e, 0x57, 0x68, 0x61,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x73, 0x49, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x6f,
	0x77, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x77, 0x68, 0x61, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x69, 0x73, 0x69, 0x74, 0x2e, 0x57, 0x68,
	0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x73, 0x49, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x4e,
	0x6f, 0x77, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x30, 0x01, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x70, 0x61, 0x6e, 0x74, 0x68, 0x65, 0x72, 0x73, 0x68, 0x61, 0x72, 0x6b, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2d, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x65, 0x70, 0x6f, 0x2f, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x77,
	0x68, 0x61, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x69, 0x73, 0x69, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_what_time_is_it_proto_rawDescOnce sync.Once
	file_what_time_is_it_proto_rawDescData = file_what_time_is_it_proto_rawDesc
)

func file_what_time_is_it_proto_rawDescGZIP() []byte {
	file_what_time_is_it_proto_rawDescOnce.Do(func() {
		file_what_time_is_it_proto_rawDescData = protoimpl.X.CompressGZIP(file_what_time_is_it_proto_rawDescData)
	})
	return file_what_time_is_it_proto_rawDescData
}

var file_what_time_is_it_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_what_time_is_it_proto_goTypes = []any{
	(*WhatTimeIsItRightNowRequest)(nil),        // 0: whattimeisit.WhatTimeIsItRightNowRequest
	(*WhatTimeIsItRightNowResponse)(nil),       // 1: whattimeisit.WhatTimeIsItRightNowResponse
	(*WhatTimeIsItRightNowStreamRequest)(nil),  // 2: whattimeisit.WhatTimeIsItRightNowStreamRequest
	(*WhatTimeIsItRightNowStreamResponse)(nil), // 3: whattimeisit.WhatTimeIsItRightNowStreamResponse
	(*timestamppb.Timestamp)(nil),              // 4: google.protobuf.Timestamp
}
var file_what_time_is_it_proto_depIdxs = []int32{
	4, // 0: whattimeisit.WhatTimeIsItRightNowResponse.now:type_name -> google.protobuf.Timestamp
	4, // 1: whattimeisit.WhatTimeIsItRightNowStreamResponse.now:type_name -> google.protobuf.Timestamp
	0, // 2: whattimeisit.WhatTimeIsItService.WhatTimeIsItRightNow:input_type -> whattimeisit.WhatTimeIsItRightNowRequest
	2, // 3: whattimeisit.WhatTimeIsItService.WhatTimeIsItRightNowStream:input_type -> whattimeisit.WhatTimeIsItRightNowStreamRequest
	1, // 4: whattimeisit.WhatTimeIsItService.WhatTimeIsItRightNow:output_type -> whattimeisit.WhatTimeIsItRightNowResponse
	3, // 5: whattimeisit.WhatTimeIsItService.WhatTimeIsItRightNowStream:output_type -> whattimeisit.WhatTimeIsItRightNowStreamResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_what_time_is_it_proto_init() }
func file_what_time_is_it_proto_init() {
	if File_what_time_is_it_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_what_time_is_it_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*WhatTimeIsItRightNowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_what_time_is_it_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*WhatTimeIsItRightNowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_what_time_is_it_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*WhatTimeIsItRightNowStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_what_time_is_it_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*WhatTimeIsItRightNowStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_what_time_is_it_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_what_time_is_it_proto_goTypes,
		DependencyIndexes: file_what_time_is_it_proto_depIdxs,
		MessageInfos:      file_what_time_is_it_proto_msgTypes,
	}.Build()
	File_what_time_is_it_proto = out.File
	file_what_time_is_it_proto_rawDesc = nil
	file_what_time_is_it_proto_goTypes = nil
	file_what_time_is_it_proto_depIdxs = nil
}
